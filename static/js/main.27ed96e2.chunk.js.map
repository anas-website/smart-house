{"version":3,"sources":["component/ContextAPI.js","component/AddRoom.js","component/Room.js","component/Home.js","component/AddDevice.js","component/Device.js","component/RoomWithDevices.js","component/Heder.js","App.js","serviceWorker.js","index.js"],"names":["context","React","createContext","Provider","Consumer","AddRoom","props","useState","roomName","setRoomName","RoomIdName","setRoomIdName","roomColor","setRoomColor","className","onChange","e","target","value","name","id","placeholder","maxLength","style","backgroundColor","minWidth","margin","display","borderRadius","paddingRight","paddingLeft","height","type","val","to","onClick","length","alert","setRooms","rooms","roomDevices","Room","border","textDecoration","index","color","roomIdName","cursor","del","Home","width","map","element","i","key","tempo","filter","fontSize","withRouter","device","setDevice","validNumOfStereo","BoilerInBathroom","validNumOFDevices","changeFlag","indexOfRoom","match","params","ObjWithStereo","find","Device","status","validAndAddDevice","btnColor","setBtnColor","background","delete","console","log","flag","setflag","btnName","setBtnName","render","setrender","n","padding","hideAndShowAddDevice","Heder","marginTop","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.27ed96e2.chunk.js","sourcesContent":["import React from 'react';\r\nconst context = React.createContext();\r\nexport const Provider = context.Provider;\r\nexport const Consumer = context.Consumer;","import React, {useState} from 'react'\r\nimport {Consumer} from './ContextAPI'\r\nimport {Link} from 'react-router-dom';\r\n// import './App.css';\r\nexport default function AddRoom(props) {\r\n    const [roomName,setRoomName]=useState('select')\r\n const [RoomIdName,setRoomIdName]=useState('')\r\n       const [roomColor,setRoomColor]=useState('#f9f0f0')\r\n \r\n    return (\r\n    <div> \r\n           \r\n <div className='container'>\r\n  <select  className='form-control ' onChange={ (e)=>{\r\n    \r\n        setRoomName( e.target.value)\r\n      }} name=\"cars\" id=\"cars\">\r\n    <option  value=\"select\">Select room </option>\r\n     <option value=\"Bedroom\">Bedroom</option>\r\n     <option value=\"Bathroom\">Bathroom</option>\r\n     <option value=\"Kitchen\">Kitchen</option>\r\n  </select>\r\n    <br/>\r\n \r\n    <input  className='form-control' placeholder='ID room' maxLength='5' onChange={(e)=>{ setRoomIdName(e.target.value)}} ></input>\r\n     <br/>\r\n <div style={{ backgroundColor:'gray',  minWidth:'300px',margin:'auto', display:'flex' ,borderRadius:'5px'}} >\r\n\r\n     <h4 style={{paddingRight :'10px',paddingLeft :'10px'}} >Choose Color</h4>\r\n\r\n     <input style={{height:'40px'}}   onChange={(e)=>{setRoomColor(e.target.value);\r\n      }} type='color'   value={roomColor} ></input>\r\n </div>\r\n <br/> \r\n\r\n <Consumer>\r\n   {(val)=>{\r\n\r\n     return<Link to='/'> <button className='btn btn-dark' onClick={() => {\r\n       if(roomName=='select'||RoomIdName.length<1){ \r\n       \r\n         alert('you did not choose a room or id room! ')}\r\n         else{val.setRooms([...val.rooms,{ roomName,RoomIdName,roomColor,roomDevices:[]}])}\r\n        \r\n       } }>Add Room</button></Link>\r\n    }\r\n   }\r\n</Consumer>\r\n    <br/>\r\n \r\n\r\n          </div>\r\n          <br />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\nexport default function Room(props) {\r\n\r\n\r\n    return (\r\n   <div>   \r\n    <div\r\n      style={{backgroundColor:props.roomColor+'D1' ,  border:'solid 2px  black ' , borderRadius:'10px'}}>\r\n      <Link style={{ textDecoration:'none' }} to={'/room/'+props.index}> \r\n  <div >\r\n       <h3 style={{color:'black' }}  >Room {props.index+1}</h3>\r\n       <h3 style={{color:'black' }} > {props.roomName}</h3> \r\n       <h3 style={{color:'black' }} >{props.roomIdName}</h3> \r\n     </div>\r\n   </Link>\r\n  </div>\r\n       <h6 style={{color:'red' ,cursor: 'pointer'}} onClick={()=>{props.del(props.index)}}>Delete</h6> \r\n       \r\n</div>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Room from './Room';\r\nimport {Consumer} from './ContextAPI'\r\nimport {Link} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Home() {\r\n\r\n//  key={Date.now().toString(36) + Math.random().toString(36).substr(2)}\r\n  return (\r\n    <div className ='container col-12'style={{width:'400px'}} >\r\n     <div className='row'>\r\n      \r\n     <Consumer>\r\n\r\n {/* Display \"Room\" component and pass with it props from the Consumer */}\r\n\r\n      { (val)=>{ \r\n        return (val.rooms.map((element, i) => {\r\n          return(<div key={i} className= 'col-6' style={{minWidth:'150px'  }}>\r\n        <Room \r\n            roomName={element.roomName}\r\n            roomIdName={element.RoomIdName}\r\n            roomColor={element.roomColor}\r\n            //Pass a function that delete a room from the contextAPI\r\n            del={(i) => {\r\n               const tempo =val.rooms.filter((element, index) => index != i)\r\n                val.setRooms(tempo)\r\n            }} index={i} />  \r\n\r\n            <br/>\r\n        </div>\r\n        )\r\n      }))}}\r\n  </Consumer> \r\n       </div>\r\n        <Link to='/addroom' style={{ textDecoration:'none' }} > <div style={{ margin:'auto' ,  color:'white', backgroundColor:'gray',border:'solid 2px black',  width:'100px',height:'70px', borderRadius:'50px' }} ><h1 style={{ fontSize:'50px', color:'whit' ,height:'50px' , }} >+</h1> </div> </Link>\r\n      <br/>\r\n    </div>\r\n  );\r\n}\r\n","import React ,{useState}from 'react'\r\nimport { Consumer } from './ContextAPI'\r\nimport {Link,Redirect,withRouter }  from 'react-router-dom'\r\nfunction AddDevice(props) {\r\n    const [device,setDevice]= useState('select')\r\n  \r\n\r\n  let validNumOfStereo=true\r\n  let BoilerInBathroom=true\r\n  let validNumOFDevices=true\r\n    // Ensure that devices are added to the appropriate rooms\r\n   const validAndAddDevice=(val)=>{\r\n  props.changeFlag()\r\n         let indexOfRoom= props.match.params.id        \r\n      \r\n        if(val.rooms[+indexOfRoom].roomDevices.length<5||val.rooms[+indexOfRoom].roomName=='Bathroom') \r\n        {validNumOFDevices=true}\r\n        else{validNumOFDevices=false}\r\n\r\n         if( !(val.rooms[+indexOfRoom].roomName=='Bathroom')&&device=='Boiler')\r\n         {BoilerInBathroom=false}\r\n         else if( (val.rooms[+indexOfRoom].roomName=='Bathroom'&&device=='Boiler'))\r\n         {BoilerInBathroom=true}\r\n         else if (val.rooms[+indexOfRoom].roomName=='Bathroom'&&(!(device=='Boiler')))\r\n         {BoilerInBathroom=false}\r\n         else{BoilerInBathroom=true}\r\n       //###################################\r\n       let ObjWithStereo= val.rooms[+indexOfRoom].roomDevices.find( ({ Device }) => Device == 'Stereo')\r\n    //  console.log(ObjWithStereo)\r\n        if((ObjWithStereo)&&device=='Stereo')\r\n        {validNumOfStereo=false \r\n              }\r\n        else{validNumOfStereo=true}\r\n      \r\n        \r\n        //##############################\r\n        if(validNumOFDevices&& validNumOfStereo&&BoilerInBathroom &&(!(device=='select'))){   \r\n        // val.rooms[+props.match.params.id].roomDevices=[device,...val.rooms[+props.match.params.id].roomDevices] }\r\n        val.rooms[+indexOfRoom].roomDevices=[...val.rooms[+indexOfRoom].roomDevices,{Device:device,status:'red'}] }\r\n         else{ alert('Some input error')}\r\n\r\n }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='container' >\r\n       \r\n             \r\n{/* \r\n//########## */}\r\n\r\n <select className='form-control' onChange={ (e)=>{  \r\n setDevice( e.target.value)\r\n\r\n    }} name='devices' >\r\n    <option value='select'>select</option>\r\n    <option value='Air-Conditioner'>Air-Conditioner</option>\r\n    <option value='Lamp'>Lamp</option>\r\n    <option value='Boiler'>Boiler</option>\r\n    <option value='Stereo'>Stereo</option>\r\n   \r\n  </select>\r\n\r\n\r\n{/* //################ */}\r\n     \r\n     <Consumer>\r\n        \r\n                {(val)=>{  return  <button className='btn btn-dark mt-4' onClick={() => {validAndAddDevice(val)}} >Add Device</button>\r\n                    }}\r\n    \r\n    </Consumer> \r\n         \r\n        </div>\r\n    )    \r\n} \r\n // withRouter enables to access the route di (/:id )\r\nexport default withRouter (AddDevice)","\r\nimport React, {useState} from 'react'\r\nimport { Consumer } from './ContextAPI'\r\nimport {withRouter }  from 'react-router-dom'\r\n\r\n function Device(props) {\r\n    \r\n    const [btnColor, setBtnColor] = useState('')\r\n  \r\n    return (\r\n        <div>\r\n             \r\n <Consumer>\r\n  {(val)=>{\r\n       //Change the button color:\r\nsetBtnColor(val.rooms[+props.match.params.id].roomDevices[props.index].status)\r\n \r\n  return(<div> <button className='btn btn-success' style={{background:btnColor}} onClick={()=>{ \r\n    if(val.rooms[+props.match.params.id].roomDevices[props.index].status=='red'){\r\n       \r\n        \r\n        val.rooms[+props.match.params.id].roomDevices[props.index].status='green'\r\n         setBtnColor( val.rooms[+props.match.params.id].roomDevices[props.index].status)\r\n         \r\n    }\r\n    else if(val.rooms[+props.match.params.id].roomDevices[props.index].status=='green'){\r\n    val.rooms[+props.match.params.id].roomDevices[props.index].status='red'}\r\n    setBtnColor(val.rooms[+props.match.params.id].roomDevices[props.index].status)\r\n  \r\n   \r\n     }}  >{props.device} </button> \r\n {/* ################ */}\r\n      \r\n\r\n      {/* Delete a device: */}\r\n\r\n    <div><h6  style={{color:'red',cursor: 'pointer'}} onClick={()=> props.delete(props.index)}  >Delete</h6></div>\r\n\r\n  </div>\r\n)\r\n    \r\n\r\n             }} \r\n</Consumer>\r\n\r\n    <br/>\r\n </div>\r\n\r\n    )\r\n }\r\n // withRouter enables to access the route di (/:id )\r\nexport default withRouter( Device)\r\n","import React,{useState} from 'react'\r\nimport {withRouter,Redirect,Link} from 'react-router-dom';\r\nimport {Consumer} from './ContextAPI'\r\n\r\nimport AddDevice from './AddDevice';\r\nimport Device from './Device'\r\n const   RoomWithDevices=function (props) {\r\n     const id=  props.match.params.id\r\n     console.log(+id )\r\n    const [flag, setflag] = useState(false)\r\n    const[btnName,setBtnName]= useState('Add Device')\r\n   const[render,setrender]=useState(false)\r\n\r\n\r\n\r\n//function change button name\r\n const changeFlag=()=>{\r\n    setflag(!flag)\r\n  if(btnName=='Add Device'){ setBtnName('Cancel')}\r\n  else{setBtnName('Add Device')}\r\n   }\r\n//##############\r\n  //Function display and hide   \"AddDevice\" component \r\n    const hideAndShowAddDevice=()=>{\r\n      if(flag){ \r\n         return(<AddDevice changeFlag={changeFlag}/>)}  \r\n    }\r\n  \r\n    return (\r\n        <div>\r\n   <Consumer>\r\n  \r\n   {(val)=>{\r\n    \r\n\r\n     // If the route is error, redirect to the home page \"/\"\r\n\r\n    if(props.match.params.id<val.rooms.length)\r\n\r\n     return ( <div  className='row' >\r\n     \r\n  <div  className='col-6' >\r\n     <h5 > Room Name: {val.rooms[+props.match.params.id].roomName}</h5>\r\n     <br/>\r\n     <h5 > Room ID: {val.rooms[+props.match.params.id].RoomIdName}</h5>\r\n  </div>\r\n\r\n<div className='col-6' >\r\n\r\n   {/* Display \"Device\" component */}\r\n\r\n      { val.rooms[+props.match.params.id].roomDevices.map((element,i)=>{\r\n      return <  Device key={i}\r\n            delete={(index)=>{ \r\n         const tempo=val.rooms[+props.match.params.id].roomDevices.filter((element,n)=>index!=n)\r\n        setrender(!render)\r\n       val.rooms[+props.match.params.id].roomDevices=[...tempo]\r\n     }}\r\n\r\n   index={i} device={element.Device}/> })\r\n }\r\n\r\n  </div>\r\n  </div> )\r\n           else return  <Redirect to='/'/>}}\r\n    \r\n   </Consumer>\r\n   <br/>\r\n  \r\n    {/* When the button is clicked, the button name is changed to \"Cancel/Add Device\" and \"AddDevice\" component is Displayed  or hidden */}\r\n\r\n<div className='container' style={{backgroundColor:'gray',padding:'20px'}} >  <button className='btn btn-dark mb-4 '  onClick={ ()=>{changeFlag()} } >{btnName}</button>\r\n      {hideAndShowAddDevice()}\r\n      </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n  // withRouter enables to access the route di (/:id )\r\nexport default withRouter ( RoomWithDevices) \r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Heder() {\r\n  return (\r\n    <div>\r\n      <div style={{ backgroundColor: \"#f1f2eb\" }} className='row '>\r\n        <div style={{ marginTop: \"10px\" }} className='col-4'>\r\n       \r\n          <Link to='/'> Home </Link>\r\n        </div>\r\n\r\n        <div className='col-4'> <h2>Smart House</h2>\r\n        </div>\r\n        <div className='col-4'> </div>\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport AddRoom from \"./component/AddRoom\";\nimport Home from \"./component/Home\";\nimport  RoomWithDevices from './component/RoomWithDevices'\nimport {Provider} from './component/ContextAPI'\n// import {Consumer} from './component/ContextAPI'\n// import {Link} from 'react-router-dom';\nimport Heder from './component/Heder'\nfunction App() {\n  const [flag,steflag]=useState(false)\n  const [rooms, setRooms] = useState([\n    { roomName: 'Kitchen',RoomIdName:'aaa', roomColor: '#f9f0f0', roomDevices:[{Device:'Lamp',status:'red'},{Device:'Lamp',status:'red'}] },\n    { roomName: 'Bedroom',RoomIdName:'bbb', roomColor: '#f9f0f0', roomDevices:[{Device:'Lamp',status:'red'},{Device:'Lamp',status:'red'}]},\n  ]);\n\n \n\n  return (\n\n    \n   <div className='App'>\n\n\n   <Provider value={{rooms,setRooms}}>\n      <Router> \n        <Heder/> \n\n        <Switch>\n            <Route exact path='/'component={()=>{ return <Home />}} /> \n             <Route  path='/addroom' component={()=>{ return <AddRoom />}}  />  \n            <Route path='/room/:id' component={()=> { return < RoomWithDevices/>}}/>\n         </Switch>     \n        </Router>\n       </Provider>\n\n\n    </div>\n  \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}